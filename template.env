########################################################
# EJEMPLO DE ARCHIVO .ENV DE CONFIGURACIÓN
########################################################
#
# Fichero de configuración para el proyecto.
# Se compone de diferentes secciones que se deberán rellenar 
# para el correcto despliegue del servidor de telemetría
#

########################################################
# CREDENCIALES MONGODB
########################################################
# 
# Usuarios y contraseñas así como nombre de la base de datos
# de MondoDB que usa el servidor de telemetría
#

# Nombre de la base de datos usada
MONGODB_DATABASE=

# Credenciales del usuario de MongoDB que se usa para 
# almacenar y acceder a las trazas
MONGODB_USER = 
MONGODB_PASSWORD=

# Puertos del servicio de MongoDB
# MONGODB_CONTAINER_PORT es el puerto en el que estará MongoDB
# de cara a otros servicios dentro de Docker
MONGODB_CONTAINER_PORT=

# Por defecto, MondoDB no está expuesto en el host, Si se quiere
# Exponer durante el desarrollo entonces es necesario incluir
# db.exposeport.yml y, opcionalmente, cambiar el puerto en el que
# se expone (MONGODB_HOST_PORT)
MONGODB_HOST_PORT=27017

########################################################
# Configuración de la API
########################################################
#
# Datos para configurar el servidor web que implementa la API Rest
# por la que se accede a las trazas almacenadas por el servidor
# de telemetría
#

# Puerto en el que contenedor que implementa la API está escuchando
API_CONTAINER_PORT=

# Puesto público del host en el que la API estará escuchando una vez
# desplegado
API_HOST_PORT=

# Palabra empleada como secret para crear las keys de seguridad
# de acceso a la API
SECRET=

########################################################
# Configuración del servidor de telemetría
########################################################
# 
# Datos de configuración de la telemetría, como el número
# máximo de envíos que se pueden hacer al servidor por grupo
# (cuando se sobrepasa este número, se sobreescribirán los
# envíos más antiguos) o el tamaño máximo de trazas
# que almacena el servidor por grupo
#

# Número máximo de envíos que se pueden hacer al servidor 
# por grupo. Se corresponde con el número máximo de documentos
# que puede albergar cada colección de MongoDB (una colección 
# por grupo). Cuando se sobrepasa este número, se 
# sobreescribirán los envíos (documentos) más antiguos
MAX_DOCUMENTS=10000

# Tamaño máximo de trazas que almacena el servidor por grupo
# El tamaño es en Mb y, una vez sobrepasado, se sobreescribirán
# los envíos más antiguos
MAX_SIZE_MB=200

########################################################
# Configuración Docker Compose
########################################################
# 
# Información para Docker compose
# 

# Nombre del proyecto (usado en lugar de la carpeta del proyecto)
COMPOSE_PROJECT_NAME=telemetry-server

# Ficheros usados por el fichero de Docker Compose por capas
# El orden es importante
# OJO: El separador de ficheros es diferente en sistemas 
# Windows (;) y en Linux (:). Por defecto usamos el separador Linux

#############
# EJEMPLOS
#############

# Versión de desarrollo: la base de datos está accesible en un puerto
# del host (MONGODB_HOST_PORT)
COMPOSE_FILE=base.yml:db.exposeport.yml

# Deployment version: Web server accessible using traefik and the Docker network
# $TRAEFIK_NETWORK manually created. Web server public names is $SERVER_PUBLIC_NAME
#COMPOSE_FILE=base.yml:network.yml:traefik.yml:traefik.url.yml:traefik.ssl.yml